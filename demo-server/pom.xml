<?xml version="1.0"?>
<project
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
        xmlns="http://maven.apache.org/POM/4.0.0">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.github.ambaridemo</groupId>
        <artifactId>ambaridemo</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <groupId>com.github.ambaridemo</groupId>
    <artifactId>demo-server</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>
    <name>demo-server Maven Webapp</name>
    <url>http://maven.apache.org</url>
    <dependencies>
        <dependency>
            <groupId>com.github.ambaridemo</groupId>
            <artifactId>demo-views</artifactId>
            <version>${parent.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-csv</artifactId>
            <version>1.1</version>
        </dependency>
        <dependency>
            <groupId>uk.com.robust-it</groupId>
            <artifactId>cloning</artifactId>
            <version>1.9.2</version>
        </dependency>
        <dependency>
            <groupId>com.google.inject.extensions</groupId>
            <artifactId>guice-assistedinject</artifactId>
            <version>${google.guice.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.inject.extensions</groupId>
            <artifactId>guice-persist</artifactId>
            <version>${google.guice.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.inject.extensions</groupId>
            <artifactId>guice-servlet</artifactId>
            <version>${google.guice.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.inject.extensions</groupId>
            <artifactId>guice-multibindings</artifactId>
            <version>${google.guice.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derby</artifactId>
            <version>10.11.1.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derbytools</artifactId>
            <version>10.11.1.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
            <version>${springframework.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
            <version>${springframework.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
            <version>${springframework.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-mock</artifactId>
            <version>2.0.8</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-ldap</artifactId>
            <version>${springframework.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.ldap</groupId>
            <artifactId>spring-ldap-core</artifactId>
            <version>1.3.1.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>org.apache.directory.server</groupId>
            <artifactId>apacheds-server-annotations</artifactId>
            <version>${directory.server.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>net.sf.ehcache</groupId>
                    <artifactId>ehcache-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.directory.server</groupId>
            <artifactId>apacheds-core-integ</artifactId>
            <version>${directory.server.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>net.sf.ehcache</groupId>
                    <artifactId>ehcache-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.directory.server</groupId>
            <artifactId>apacheds-server-integ</artifactId>
            <version>${directory.server.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.directory.server</groupId>
            <artifactId>apacheds-jdbm</artifactId>
            <version>2.0.0-M5</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.directory.server</groupId>
            <artifactId>apacheds-kerberos-codec</artifactId>
            <version>${directory.server.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>net.sf.ehcache</groupId>
                    <artifactId>ehcache-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.directory.server</groupId>
            <artifactId>apacheds-core</artifactId>
            <version>${directory.server.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>net.sf.ehcache</groupId>
                    <artifactId>ehcache-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.directory.server</groupId>
            <artifactId>apacheds-protocol-ldap</artifactId>
            <version>${directory.server.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.directory.server</groupId>
            <artifactId>kerberos-client</artifactId>
            <version>${directory.server.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.directory.shared</groupId>
            <artifactId>shared-ldap</artifactId>
            <version>0.9.17</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.16</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.persistence</groupId>
            <artifactId>eclipselink</artifactId>
            <version>2.5.2</version>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>1.10.19</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-server</artifactId>
            <version>${jetty.version}</version>
        </dependency>

        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-security</artifactId>
            <version>${jetty.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-servlet</artifactId>
            <version>${jetty.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-servlets</artifactId>
            <version>${jetty.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-webapp</artifactId>
            <version>${jetty.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-util-ajax</artifactId>
            <version>${jetty.version}</version>
        </dependency>
        <!--jsp support for jetty -->
        <dependency>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jsp-api-2.1-glassfish</artifactId>
            <version>2.1.v20100127</version>
        </dependency>
        <dependency>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jsp-2.1-glassfish</artifactId>
            <version>2.1.v20100127</version>
        </dependency>
        <dependency>
            <groupId>org.apache.ant</groupId>
            <artifactId>ant</artifactId>
            <version>${ant.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.ant</groupId>
            <artifactId>ant-launcher</artifactId>
            <version>${ant.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>1.1.1</version>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.8</version>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.5</version>
        </dependency>
        <dependency>
            <groupId>commons-httpclient</groupId>
            <artifactId>commons-httpclient</artifactId>
            <version>3.1</version>
        </dependency>
        <dependency>
            <groupId>commons-net</groupId>
            <artifactId>commons-net</artifactId>
            <version>1.4.1</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-json</artifactId>
            <version>${jersey.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.codehaus.jackson</groupId>
                    <artifactId>jackson-xc</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.codehaus.jettison</groupId>
                    <artifactId>jettison</artifactId>

                </exclusion>
                <exclusion>
                    <groupId>org.codehaus.jackson</groupId>
                    <artifactId>jackson-mapper-asl</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-core</artifactId>
            <version>${jersey.version}</version>
        </dependency>

        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-server</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-client</artifactId>
            <version>1.11</version>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey.contribs</groupId>
            <artifactId>jersey-multipart</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey.contribs</groupId>
            <artifactId>jersey-guice</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-core-asl</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-jaxrs</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-xc</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey.jersey-test-framework</groupId>
            <artifactId>jersey-test-framework-core</artifactId>
            <version>1.18</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey.jersey-test-framework</groupId>
            <artifactId>jersey-test-framework-grizzly2</artifactId>
            <version>1.18</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jettison</groupId>
            <artifactId>jettison</artifactId>
            <version>1.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.10</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.easymock</groupId>
            <artifactId>easymock</artifactId>
            <version>3.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-junit4</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-easymock</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-core</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-reflect</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-mockito</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>nl.jqno.equalsverifier</groupId>
            <artifactId>equalsverifier</artifactId>
            <version>1.7.4</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.objenesis</groupId>
            <artifactId>objenesis-tck</artifactId>
            <version>1.2</version>
        </dependency>
        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib</artifactId>
            <version>2.2.2</version>
        </dependency>
        <dependency>
            <groupId>asm</groupId>
            <artifactId>asm</artifactId>
            <version>3.3.1</version>
        </dependency>
        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
            <version>3.0</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.2.2</version>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>9.3-1101-jdbc4</version>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.36</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.2.5</version>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>14.0.1</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
            <version>1.3.9</version>
        </dependency>
        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
            <version>2.2.1</version>
        </dependency>
        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz-jobs</artifactId>
            <version>2.2.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.velocity</groupId>
            <artifactId>velocity</artifactId>
            <version>1.7</version>
        </dependency>
        <dependency>
            <groupId>com.sun.mail</groupId>
            <artifactId>mailapi</artifactId>
            <version>1.5.2</version>
        </dependency>
        <dependency>
            <groupId>com.sun.mail</groupId>
            <artifactId>smtp</artifactId>
            <version>1.5.2</version>
        </dependency>
        <dependency>
            <groupId>org.snmp4j</groupId>
            <artifactId>snmp4j</artifactId>
            <version>1.10.1</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>2.1.4</version>
        </dependency>
        <dependency>
            <groupId>net.sf.ehcache</groupId>
            <artifactId>ehcache</artifactId>
            <version>2.10.0</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>9.3.3.v20150827</version>
                <configuration>
                    <scanIntervalSeconds>1</scanIntervalSeconds>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <id>parse-version</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>parse-version</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>regex-property</id>
                        <goals>
                            <goal>regex-property</goal>
                        </goals>
                        <configuration>
                            <name>ambariVersion</name>
                            <value>${project.version}</value>
                            <regex>^([0-9]+)\.([0-9]+)\.([0-9]+)(\.|-).*</regex>
                            <replacement>$1.$2.$3</replacement>
                            <failIfNoMatch>false</failIfNoMatch>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>generate-test-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/
                            </outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/../</directory>
                                    <includes>
                                        <include>version</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                                <resource>
                                    <directory>${basedir}/sbin/</directory>
                                    <includes>
                                        <include>ambari-server</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.0</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <fork>true</fork>

                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.7</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <configuration>
                            <tasks>
                                <jar destfile="target/DBConnectionVerification.jar">
                                    <fileset dir="${basedir}/target/classes/"
                                             includes="**/DBConnectionVerification.class"/>
                                    <manifest>
                                        <attribute name="Main-Class"
                                                   value="org.apache.ambari.server.DBConnectionVerification"/>
                                    </manifest>
                                </jar>
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.rat</groupId>
                <artifactId>apache-rat-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>pass.txt</exclude>
                        <exclude>pom.xml</exclude>
                        <exclude>**/*</exclude>
                        <exclude>**/*.html</exclude>
                        <exclude>derby.log</exclude>
                        <exclude>src/test/resources/version</exclude>
                        <exclude>src/test/resources/users.ldif</exclude>
                        <exclude>src/test/resources/gsInstaller-hosts.txt
                        </exclude>
                        <exclude>src/test/resources/temporal_ganglia_data.txt
                        </exclude>
                        <exclude>src/test/resources/users.ldif</exclude>
                        <exclude>
                            src/main/resources/hive-schema-0.10.0.oracle.sql
                        </exclude>
                        <exclude>
                            src/main/resources/hive-schema-0.12.0.oracle.sql
                        </exclude>
                        <exclude>src/main/resources/db/serial</exclude>
                        <exclude>src/main/resources/db/index.txt</exclude>
                        <exclude>
                            src/main/resources/stacks/HDP/2.1.GlusterFS/services/YARN/package/templates/exclude_hosts_list.j2
                        </exclude>
                        <exclude>src/main/windows/ambari-server.cmd</exclude>
                        <exclude>src/main/windows/ambari-server.ps1</exclude>
                        <exclude>src/main/package/choco/ambari-server.nuspec
                        </exclude>
                        <exclude>
                            src/main/resources/common-services/AMBARI_METRICS/0.1.0/package/templates/smoketest_metrics.json.j2
                        </exclude>
                        <exclude>
                            src/main/resources/common-services/AMBARI_METRICS/0.1.0/package/files/service-metrics/*.txt
                        </exclude>
                        <exclude>
                            src/main/resources/common-services/HDFS/2.1.0.2.0/package/scripts/balancer-emulator/balancer-err.log
                        </exclude>
                        <exclude>
                            src/main/resources/common-services/HDFS/2.1.0.2.0/package/scripts/balancer-emulator/balancer.log
                        </exclude>
                        <exclude>
                            src/main/resources/stacks/BIGTOP/0.8/services/HDFS/package/scripts/balancer-emulator/balancer.log
                        </exclude>
                        <exclude>
                            src/main/resources/stacks/BIGTOP/0.8/services/HDFS/package/scripts/balancer-emulator/balancer-err.log
                        </exclude>
                        <exclude>
                            src/main/resources/stacks/PHD/3.0.0.0/services/HDFS/package/scripts/balancer-emulator/balancer.log
                        </exclude>
                        <exclude>
                            src/main/resources/stacks/PHD/3.0.0.0/services/HDFS/package/scripts/balancer-emulator/balancer-err.log
                        </exclude>
                        <exclude>conf/unix/ca.config</exclude>
                        <exclude>conf/unix/krb5JAASLogin.conf</exclude>
                        <exclude>conf/windows/ca.config</exclude>
                        <exclude>conf/windows/krb5JAASLogin.conf</exclude>
                        <exclude>**/*.iml</exclude>
                        <exclude>**/*.json</exclude>
                        <exclude>**/*.sql</exclude>
                        <exclude>**/repo_suse_rhel.j2</exclude>
                        <exclude>**/repo_debian.j2</exclude>
                        <exclude>**/cluster.properties.j2</exclude>
                        <exclude>**/repo_ubuntu.j2</exclude>
                        <exclude>**/.pydev*</exclude>
                        <!--gitignore content -->
                        <exclude>src/main/resources/db/newcerts/**</exclude>

                        <!-- Stack definitions -->
                        <exclude>
                            src/main/resources/stacks/HDP/2.0._/services/HBASE/package/templates/regionservers.j2
                        </exclude>
                        <exclude>
                            src/main/resources/stacks/HDPWIN/2.1/services/*/configuration*/*
                        </exclude>

                        <!--test samples -->
                        <exclude>
                            src/test/resources/TestAmbaryServer.samples/**
                        </exclude>
                        <exclude>src/test/resources/*.txt</exclude>
                        <exclude>
                            src/test/resources/users_for_dn_with_space.ldif
                        </exclude>

                        <!--Velocity log -->
                        <exclude>**/velocity.log*</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <phase>test</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>eclipselink-staticweave-maven-plugin</artifactId>
                <groupId>au.com.alderaan</groupId>
                <version>1.0.4</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>weave</goal>
                        </goals>
                        <phase>process-classes</phase>
                        <configuration>
                            <logLevel>ALL</logLevel>
                            <includeProjectClasspath>true
                            </includeProjectClasspath>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.eclipse.persistence</groupId>
                        <artifactId>eclipselink</artifactId>
                        <version>2.4.2</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>rpm-maven-plugin</artifactId>
                <version>2.0.1</version>
                <executions>
                    <execution>
                        <!-- unbinds rpm creation from maven lifecycle -->
                        <phase>none</phase>
                        <goals>
                            <goal>rpm</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <copyright>2012, Apache Software Foundation</copyright>
                    <group>Development</group>
                    <description>Maven Recipe: RPM Package.</description>
                    <autoRequires>no</autoRequires>
                    <requires>
                        <require>postgresql-server &gt;= 8.1</require>
                        <require>openssl</require>
                        <require>${python.ver}</require>
                        <require>${python.xml.package}</require>
                    </requires>
                    <postinstallScriptlet>
                        <scriptFile>src/main/package/rpm/postinstall.sh
                        </scriptFile>
                        <fileEncoding>utf-8</fileEncoding>
                    </postinstallScriptlet>
                    <preinstallScriptlet>
                        <scriptFile>src/main/package/rpm/preinstall.sh
                        </scriptFile>
                        <fileEncoding>utf-8</fileEncoding>
                    </preinstallScriptlet>
                    <preremoveScriptlet>
                        <scriptFile>src/main/package/rpm/preremove.sh
                        </scriptFile>
                        <fileEncoding>utf-8</fileEncoding>
                    </preremoveScriptlet>
                    <posttransScriptlet>
                        <scriptFile>src/main/package/rpm/posttrans_server.sh
                        </scriptFile>
                        <fileEncoding>utf-8</fileEncoding>
                    </posttransScriptlet>
                    <defaultFilemode>644</defaultFilemode>
                    <defaultDirmode>755</defaultDirmode>
                    <defaultUsername>root</defaultUsername>
                    <defaultGroupname>root</defaultGroupname>
                    <needarch>x86_64</needarch>
                    <mappings>
                        <mapping>
                            <directory>/usr/lib/ambari-server</directory>
                            <dependency>
                            </dependency>
                        </mapping>
                        <mapping>
                            <directory>/usr/lib/ambari-server/web</directory>
                            <sources>
                                <source>
                                    <location>${ambari-web-dir}</location>
                                    <includes>
                                        <include>**</include>
                                    </includes>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/usr/lib/ambari-server</directory>
                            <sources>
                                <source>
                                    <location>
                                        ${project.build.directory}/${project.artifactId}-${project.version}.jar
                                    </location>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>${ambari_commons.install.dir}</directory>
                            <sources>
                                <source>
                                    <location>
                                        ${project.basedir}/../ambari-common/src/main/python/ambari_commons
                                    </location>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>${resource_management.install.dir}
                            </directory>
                            <sources>
                                <source>
                                    <location>
                                        ${resourceManagementSrcLocation}
                                    </location>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>${jinja.install.dir}</directory>
                            <filemode>755</filemode>
                            <username>root</username>
                            <groupname>root</groupname>
                            <sources>
                                <source>
                                    <location>
                                        ${project.basedir}/../ambari-common/src/main/python/ambari_jinja2/ambari_jinja2
                                    </location>
                                    <excludes>
                                        <exclude>
                                            ${project.basedir}/../ambari-common/src/main/python/ambari_jinja2/ambari_jinja2/testsuite
                                        </exclude>
                                    </excludes>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>${simplejson.install.dir}</directory>
                            <filemode>755</filemode>
                            <username>root</username>
                            <groupname>root</groupname>
                            <sources>
                                <source>
                                    <location>
                                        ${project.basedir}/../ambari-common/src/main/python/ambari_simplejson
                                    </location>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/usr/sbin</directory>
                            <filemode>755</filemode>
                            <username>root</username>
                            <groupname>root</groupname>
                            <directoryIncluded>false</directoryIncluded>
                            <sources>
                                <source>
                                    <location>src/main/python/ambari-server.py
                                    </location>
                                </source>
                                <source>
                                    <location>
                                        src/main/python/ambari_server_main.py
                                    </location>
                                </source>
                                <source>
                                    <location>sbin/ambari-server</location>
                                    <filter>true</filter>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/var/lib/ambari-server/</directory>
                            <filemode>755</filemode>
                            <username>root</username>
                            <groupname>root</groupname>
                            <directoryIncluded>false</directoryIncluded>
                            <sources>
                                <source>
                                    <location>
                                        ../ambari-common/src/main/unix/ambari-python-wrap
                                    </location>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/etc/ambari-server/conf</directory>
                            <configuration>true</configuration>
                            <sources>
                                <source>
                                    <location>${ambariProperties}</location>
                                </source>
                                <source>
                                    <location>conf/unix/log4j.properties
                                    </location>
                                </source>
                                <source>
                                    <location>conf/unix/krb5JAASLogin.conf
                                    </location>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/var/lib/ambari-server/</directory>
                            <configuration>true</configuration>
                            <filemode>700</filemode>
                            <username>root</username>
                            <groupname>root</groupname>
                            <sources>
                                <source>
                                    <location>conf/unix/ambari-env.sh</location>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/var/lib/ambari-server/</directory>
                            <filemode>700</filemode>
                            <username>root</username>
                            <groupname>root</groupname>
                            <sources>
                                <source>
                                    <location>conf/unix/ambari-sudo.sh
                                    </location>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/var/lib/ambari-server/</directory>
                            <filemode>700</filemode>
                            <username>root</username>
                            <groupname>root</groupname>
                            <sources>
                                <source>
                                    <location>conf/unix/install-helper.sh
                                    </location>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/var/lib/ambari-server/keys</directory>
                            <sources>
                                <source>
                                    <location>conf/unix/ca.config</location>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/var/lib/ambari-server/keys/db
                            </directory>
                            <filemode>700</filemode>
                            <username>root</username>
                            <groupname>root</groupname>
                            <sources>
                                <source>
                                    <location>src/main/resources/db</location>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/var/run/ambari-server/bootstrap
                            </directory>
                        </mapping>
                        <mapping>
                            <directory>
                                /var/run/ambari-server/stack-recommendations
                            </directory>
                        </mapping>
                        <mapping>
                            <directory>/var/log/ambari-server</directory>
                        </mapping>
                        <mapping>
                            <directory>/var/lib/ambari-server/resources
                            </directory>
                            <sources>
                                <source>
                                    <location>
                                        target/classes/Ambari-DDL-Postgres-CREATE.sql
                                    </location>
                                </source>
                                <source>
                                    <location>
                                        src/main/resources/Ambari-DDL-Postgres-DROP.sql
                                    </location>
                                </source>
                                <source>
                                    <location>
                                        target/classes/Ambari-DDL-Postgres-EMBEDDED-CREATE.sql
                                    </location>
                                </source>
                                <source>
                                    <location>
                                        src/main/resources/Ambari-DDL-Postgres-EMBEDDED-DROP.sql
                                    </location>
                                </source>
                                <source>
                                    <location>
                                        target/classes/Ambari-DDL-Oracle-CREATE.sql
                                    </location>
                                </source>
                                <source>
                                    <location>
                                        target/classes/Ambari-DDL-MySQL-CREATE.sql
                                    </location>
                                </source>
                                <source>
                                    <location>
                                        src/main/resources/Ambari-DDL-Oracle-DROP.sql
                                    </location>
                                </source>
                                <source>
                                    <location>
                                        src/main/resources/Ambari-DDL-MySQL-DROP.sql
                                    </location>
                                </source>
                                <source>
                                    <location>
                                        target/classes/Ambari-DDL-SQLServer-CREATE.sql
                                    </location>
                                </source>
                                <source>
                                    <location>
                                        target/classes/Ambari-DDL-SQLServer-CREATELOCAL.sql
                                    </location>
                                </source>
                                <source>
                                    <location>
                                        src/main/resources/Ambari-DDL-SQLServer-DROP.sql
                                    </location>
                                </source>
                                <source>
                                    <location>
                                        target/classes/Ambari-DDL-SQLAnywhere-CREATE.sql
                                    </location>
                                </source>
                                <source>
                                    <location>
                                        src/main/resources/Ambari-DDL-SQLAnywhere-DROP.sql
                                    </location>
                                </source>
                                <source>
                                    <location>
                                        ${project.build.directory}/DBConnectionVerification.jar
                                    </location>
                                </source>
                                <source>
                                    <location>
                                        src/main/resources/role_command_order.json
                                    </location>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/var/lib/ambari-server/data/tmp
                            </directory>
                            <filemode>755</filemode>
                            <username>root</username>
                            <groupname>root</groupname>
                        </mapping>
                        <mapping>
                            <directory>/var/lib/ambari-server/data/cache
                            </directory>
                            <filemode>700</filemode>
                            <username>root</username>
                            <groupname>root</groupname>
                        </mapping>
                        <mapping>
                            <directory>/var/lib/ambari-server/resources/apps
                            </directory>
                            <filemode>755</filemode>
                            <username>root</username>
                            <groupname>root</groupname>
                            <sources>
                                <source>
                                    <location>
                                        src/main/resources/slider_resources/README.txt
                                    </location>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>
                                /var/lib/ambari-server/resources/scripts
                            </directory>
                            <filemode>755</filemode>
                            <sources>
                                <source>
                                    <location>src/main/resources/scripts
                                    </location>
                                </source>
                                <source>
                                    <location>src/main/python/upgradeHelper.py
                                    </location>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>
                                /var/lib/ambari-server/resources/upgrade
                            </directory>
                        </mapping>
                        <mapping>
                            <directory>
                                /var/lib/ambari-server/resources/upgrade/ddl
                            </directory>
                            <sources>
                                <source>
                                    <location>src/main/resources/upgrade/ddl
                                    </location>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>
                                /var/lib/ambari-server/resources/upgrade/dml
                            </directory>
                            <sources>
                                <source>
                                    <location>src/main/resources/upgrade/dml
                                    </location>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>
                                /var/lib/ambari-server/resources/common-services
                            </directory>
                            <sources>
                                <source>
                                    <location>${commonServicesSrcLocation}
                                    </location>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>
                                /var/lib/ambari-server/resources/upgrade/catalog
                            </directory>
                            <sources>
                                <source>
                                    <location>
                                        src/main/resources/upgrade/catalog
                                    </location>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>
                                /var/lib/ambari-server/resources/stacks/${stack.distribution}
                            </directory>
                            <sources>
                                <source>
                                    <location>${stacksSrcLocation}</location>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/var/lib/ambari-server/resources/stacks
                            </directory>
                            <filemode>755</filemode>
                            <username>root</username>
                            <groupname>root</groupname>
                            <sources>
                                <source>
                                    <location>
                                        target/classes/stacks/stack_advisor.py
                                    </location>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>
                                /usr/lib/python2.6/site-packages/ambari_server
                            </directory>
                            <filemode>755</filemode>
                            <username>root</username>
                            <groupname>root</groupname>
                            <sources>
                                <source>
                                    <location>src/main/python/ambari_server
                                    </location>
                                </source>
                                <source>
                                    <location>src/main/python/bootstrap.py
                                    </location>
                                </source>
                                <source>
                                    <location>src/main/python/setupAgent.py
                                    </location>
                                </source>
                                <source>
                                    <location>src/main/python/os_check_type.py
                                    </location>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/var/run/ambari-server</directory>
                        </mapping>
                        <mapping>
                            <directory>/var/lib/ambari-server/resources
                            </directory>
                            <sources>
                                <source>
                                    <location>../version</location>
                                    <filter>true</filter>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>
                                /var/lib/ambari-server/resources/custom_action_definitions
                            </directory>
                            <sources>
                                <source>
                                    <location>
                                        src/main/resources/custom_action_definitions
                                    </location>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <!-- custom actions root-->
                            <directory>
                                /var/lib/ambari-server/resources/custom_actions
                            </directory>
                            <filemode>755</filemode>
                            <username>root</username>
                            <groupname>root</groupname>
                            <sources>
                                <source>
                                    <location>${customActionsRoot}</location>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>
                                /var/lib/ambari-server/resources/host_scripts
                            </directory>
                            <filemode>755</filemode>
                            <username>root</username>
                            <groupname>root</groupname>
                            <sources>
                                <source>
                                    <location>src/main/resources/host_scripts
                                    </location>
                                </source>
                            </sources>
                        </mapping>
                    </mappings>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.vafer</groupId>
                <artifactId>jdeb</artifactId>
                <version>1.0.1</version>
                <executions>
                    <execution>
                        <!-- unbinds rpm creation from maven lifecycle -->
                        <phase>none</phase>
                        <goals>
                            <goal>jdeb</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <controlDir>${basedir}/src/main/package/deb/control
                    </controlDir>
                    <deb>
                        ${basedir}/target/${artifactId}_${package-version}-${package-release}.deb
                    </deb>
                    <dataSet>
                        <data>
                            <type>template</type>
                            <paths>
                                <path>/usr/lib/ambari-server</path>
                                <path>/var/run/ambari-server</path>
                                <path>/var/run/ambari-server/bootstrap</path>
                                <path>
                                    /var/run/ambari-server/stack-recommendations
                                </path>
                                <path>/var/log/ambari-server</path>
                                <path>/var/lib/ambari-server/resources/upgrade
                                </path>
                                <path>/var/lib/ambari-server/data/tmp</path>
                                <path>/var/lib/ambari-server/data/cache</path>
                            </paths>
                        </data>
                        <!-- TODO: should be included all subdirs, if exists-->
                        <data>
                            <src>${basedir}/../ambari-web/public</src>
                            <type>directory</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/usr/lib/ambari-server/web</prefix>
                            </mapper>
                        </data>
                        <data>
                            <src>
                                ${project.build.directory}/${project.artifactId}-${project.version}-dist/${project.artifactId}-${project.version}/lib
                            </src>
                            <type>directory</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/usr/lib</prefix>
                            </mapper>
                        </data>
                        <data>
                            <src>src/main/python/ambari-server.py</src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/usr/sbin</prefix>
                                <user>root</user>
                                <group>root</group>
                                <filemode>755</filemode>
                            </mapper>
                        </data>
                        <data>
                            <src>src/main/python/ambari_server_main.py</src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/usr/sbin</prefix>
                                <user>root</user>
                                <group>root</group>
                                <filemode>755</filemode>
                            </mapper>
                        </data>
                        <data>
                            <src>src/main/python/ambari-server.py</src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/usr/sbin</prefix>
                                <user>root</user>
                                <group>root</group>
                                <filemode>755</filemode>
                            </mapper>
                        </data>
                        <data>
                            <src>
                                ../ambari-common/src/main/unix/ambari-python-wrap
                            </src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/var/lib/ambari-server</prefix>
                                <user>root</user>
                                <group>root</group>
                                <filemode>755</filemode>
                            </mapper>
                        </data>
                        <data>
                            <src>${basedir}/target/ambari-server</src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/usr/sbin</prefix>
                                <user>root</user>
                                <group>root</group>
                                <filemode>755</filemode>
                            </mapper>
                        </data>
                        <data>
                            <src>${ambariProperties}</src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/etc/ambari-server/conf</prefix>
                            </mapper>
                        </data>
                        <data>
                            <src>conf/unix/log4j.properties</src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/etc/ambari-server/conf</prefix>
                            </mapper>
                        </data>
                        <data>
                            <src>conf/unix/krb5JAASLogin.conf</src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/etc/ambari-server/conf</prefix>
                            </mapper>
                        </data>
                        <!-- /q001 -->
                        <data>
                            <src>conf/unix/ambari-env.sh</src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/var/lib/ambari-server/</prefix>
                                <user>root</user>
                                <group>root</group>
                                <filemode>700</filemode>
                            </mapper>
                        </data>
                        <data>
                            <src>conf/unix/ambari-sudo.sh</src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/var/lib/ambari-server/</prefix>
                                <user>root</user>
                                <group>root</group>
                                <filemode>700</filemode>
                            </mapper>
                        </data>
                        <data>
                            <src>conf/unix/install-helper.sh</src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/var/lib/ambari-server/</prefix>
                                <user>root</user>
                                <group>root</group>
                                <filemode>700</filemode>
                            </mapper>
                        </data>
                        <data>
                            <src>
                                src/main/resources/slider_resources/README.txt
                            </src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/var/lib/ambari-server/resources/apps/
                                </prefix>
                                <user>root</user>
                                <group>root</group>
                                <filemode>755</filemode>
                            </mapper>
                        </data>
                        <data>
                            <src>conf/unix/ca.config</src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/var/lib/ambari-server/keys</prefix>
                            </mapper>
                        </data>
                        <data>
                            <src>src/main/resources/db</src>
                            <type>directory</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/var/lib/ambari-server/keys/db</prefix>
                                <user>root</user>
                                <group>root</group>
                                <filemode>700</filemode>
                            </mapper>
                        </data>
                        <data>
                            <src>target/classes/Ambari-DDL-Postgres-CREATE.sql
                            </src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/var/lib/ambari-server/resources
                                </prefix>
                            </mapper>
                        </data>
                        <data>
                            <src>
                                src/main/resources/Ambari-DDL-Postgres-DROP.sql
                            </src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/var/lib/ambari-server/resources
                                </prefix>
                            </mapper>
                        </data>
                        <data>
                            <src>
                                target/classes/Ambari-DDL-Postgres-EMBEDDED-CREATE.sql
                            </src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/var/lib/ambari-server/resources
                                </prefix>
                            </mapper>
                        </data>
                        <data>
                            <src>
                                src/main/resources/Ambari-DDL-Postgres-EMBEDDED-DROP.sql
                            </src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/var/lib/ambari-server/resources
                                </prefix>
                            </mapper>
                        </data>
                        <data>
                            <src>target/classes/Ambari-DDL-Oracle-CREATE.sql
                            </src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/var/lib/ambari-server/resources
                                </prefix>
                            </mapper>
                        </data>
                        <data>
                            <src>target/classes/Ambari-DDL-MySQL-CREATE.sql
                            </src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/var/lib/ambari-server/resources
                                </prefix>
                            </mapper>
                        </data>
                        <data>
                            <src>src/main/resources/Ambari-DDL-Oracle-DROP.sql
                            </src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/var/lib/ambari-server/resources
                                </prefix>
                            </mapper>
                        </data>
                        <data>
                            <src>src/main/resources/Ambari-DDL-MySQL-DROP.sql
                            </src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/var/lib/ambari-server/resources
                                </prefix>
                            </mapper>
                        </data>
                        <data>
                            <src>
                                target/classes/Ambari-DDL-SQLServer-CREATE.sql
                            </src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/var/lib/ambari-server/resources
                                </prefix>
                            </mapper>
                        </data>
                        <data>
                            <src>
                                target/classes/Ambari-DDL-SQLServer-CREATELOCAL.sql
                            </src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/var/lib/ambari-server/resources
                                </prefix>
                            </mapper>
                        </data>
                        <data>
                            <src>
                                src/main/resources/Ambari-DDL-SQLServer-DROP.sql
                            </src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/var/lib/ambari-server/resources
                                </prefix>
                            </mapper>
                        </data>
                        <data>
                            <src>
                                target/classes/Ambari-DDL-SQLAnywhere-CREATE.sql
                            </src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/var/lib/ambari-server/resources
                                </prefix>
                            </mapper>
                        </data>
                        <data>
                            <src>
                                src/main/resources/Ambari-DDL-SQLAnywhere-DROP.sql
                            </src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/var/lib/ambari-server/resources
                                </prefix>
                            </mapper>
                        </data>
                        <data>
                            <src>
                                ${project.build.directory}/DBConnectionVerification.jar
                            </src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/var/lib/ambari-server/resources
                                </prefix>
                            </mapper>
                        </data>
                        <data>
                            <src>src/main/resources/role_command_order.json
                            </src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/var/lib/ambari-server/resources
                                </prefix>
                            </mapper>
                        </data>
                        <data>
                            <src>src/main/resources/scripts</src>
                            <type>directory</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>
                                    /var/lib/ambari-server/resources/scripts
                                </prefix>
                                <filemode>755</filemode>
                            </mapper>
                        </data>
                        <data>
                            <src>src/main/python/upgradeHelper.py</src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>
                                    /var/lib/ambari-server/resources/scripts
                                </prefix>
                                <filemode>755</filemode>
                            </mapper>
                        </data>
                        <data>
                            <src>src/main/resources/upgrade/ddl</src>
                            <type>directory</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>
                                    /var/lib/ambari-server/resources/upgrade/ddl
                                </prefix>
                            </mapper>
                        </data>
                        <data>
                            <src>src/main/resources/upgrade/dml</src>
                            <type>directory</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>
                                    /var/lib/ambari-server/resources/upgrade/dml
                                </prefix>
                            </mapper>
                        </data>
                        <data>
                            <src>${commonServicesSrcLocation}</src>
                            <type>directory</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>
                                    /var/lib/ambari-server/resources/common-services
                                </prefix>
                            </mapper>
                        </data>
                        <data>
                            <src>src/main/resources/upgrade/catalog</src>
                            <type>directory</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>
                                    /var/lib/ambari-server/resources/upgrade/catalog
                                </prefix>
                            </mapper>
                        </data>
                        <data>
                            <src>${stacksSrcLocation}</src>
                            <type>directory</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>
                                    /var/lib/ambari-server/resources/stacks/${stack.distribution}
                                </prefix>
                            </mapper>
                        </data>
                        <data>
                            <src>target/classes/stacks/stack_advisor.py</src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>
                                    /var/lib/ambari-server/resources/stacks
                                </prefix>
                                <user>root</user>
                                <group>root</group>
                                <filemode>755</filemode>
                            </mapper>
                        </data>
                        <data>
                            <src>src/main/python/ambari_server</src>
                            <type>directory</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>
                                    /usr/lib/python2.6/site-packages/ambari_server
                                </prefix>
                                <user>root</user>
                                <group>root</group>
                                <filemode>755</filemode>
                            </mapper>
                        </data>
                        <data>
                            <src>src/main/python/bootstrap.py</src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>
                                    /usr/lib/python2.6/site-packages/ambari_server
                                </prefix>
                                <user>root</user>
                                <group>root</group>
                                <filemode>755</filemode>
                            </mapper>
                        </data>
                        <data>
                            <src>src/main/python/setupAgent.py</src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>
                                    /usr/lib/python2.6/site-packages/ambari_server
                                </prefix>
                                <user>root</user>
                                <group>root</group>
                                <filemode>755</filemode>
                            </mapper>
                        </data>
                        <data>
                            <src>src/main/python/os_check_type.py</src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>
                                    /usr/lib/python2.6/site-packages/ambari_server
                                </prefix>
                                <user>root</user>
                                <group>root</group>
                                <filemode>755</filemode>
                            </mapper>
                        </data>
                        <data>
                            <src>${basedir}/target/version</src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/var/lib/ambari-server/resources
                                </prefix>
                            </mapper>
                        </data>
                        <data>
                            <src>src/main/resources/custom_action_definitions
                            </src>
                            <type>directory</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>
                                    /var/lib/ambari-server/resources/custom_action_definitions
                                </prefix>
                            </mapper>
                        </data>
                        <data>
                            <src>${customActionsRoot}</src>
                            <type>directory</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>
                                    /var/lib/ambari-server/resources/custom_actions
                                </prefix>
                                <user>root</user>
                                <group>root</group>
                                <filemode>755</filemode>
                            </mapper>
                        </data>
                        <data>
                            <src>src/main/resources/host_scripts</src>
                            <type>directory</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>
                                    /var/lib/ambari-server/resources/host_scripts
                                </prefix>
                                <user>root</user>
                                <group>root</group>
                                <filemode>755</filemode>
                            </mapper>
                        </data>
                        <data>
                            <src>
                                ${project.basedir}/../ambari-common/src/main/python/ambari_commons
                            </src>
                            <type>directory</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>${ambari_commons.install.dir}</prefix>
                                <filemode>755</filemode>
                                <user>root</user>
                                <group>root</group>
                            </mapper>
                        </data>
                        <data>
                            <src>
                                ${resourceManagementSrcLocation}
                            </src>
                            <type>directory</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>${resource_management.install.dir}
                                </prefix>
                                <filemode>755</filemode>
                                <user>root</user>
                                <group>root</group>
                            </mapper>
                        </data>
                        <data>
                            <src>
                                ${project.basedir}/../ambari-common/src/main/python/ambari_jinja2/ambari_jinja2
                            </src>
                            <excludes>
                                ${project.basedir}/../ambari-common/src/main/python/ambari_jinja2/ambari_jinja2/testsuite
                            </excludes>
                            <type>directory</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>${jinja.install.dir}</prefix>
                                <filemode>755</filemode>
                                <user>root</user>
                                <group>root</group>
                            </mapper>
                        </data>
                        <data>
                            <src>
                                ${project.basedir}/../ambari-common/src/main/python/ambari_simplejson
                            </src>
                            <type>directory</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>${simplejson.install.dir}</prefix>
                                <filemode>755</filemode>
                                <user>root</user>
                                <group>root</group>
                            </mapper>
                        </data>
                    </dataSet>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>3.0.2</version>
                <configuration>
                    <failOnError>false</failOnError>
                </configuration>
                <executions>
                    <execution>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skip>${skipSurefireTests}</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.atlassian.maven.plugins</groupId>
                <artifactId>maven-clover2-plugin</artifactId>
                <version>3.1.11</version>
                <!-- <configuration> <licenseLocation>/path/to/clover.license</licenseLocation>
                  </configuration> -->
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
                <version>${buildnumber-maven-plugin-version}</version>
                <configuration>
                    <urlScm>
                        scm:git:https://git-wip-us.apache.org/repos/asf/incubator-ambari.git
                    </urlScm>
                </configuration>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>create</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.7</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <configuration>
                            <tasks>
                                <jar destfile="target/DBConnectionVerification.jar">
                                    <fileset dir="${basedir}/target/classes/"
                                             includes="**/DBConnectionVerification.class"/>
                                    <manifest>
                                        <attribute name="Main-Class"
                                                   value="org.apache.ambari.server.DBConnectionVerification"/>
                                    </manifest>
                                </jar>
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

</project>
